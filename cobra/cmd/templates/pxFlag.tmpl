    // ----- autogenerated stub. DO NOT EDIT -----
    // fetch global flag values this way
    json, err := provider.GetGlobalBool(flagGlobalJson)
    if err != nil {
        return err
    }
	raw, err := provider.GetGlobalBool(flagGlobalRaw)
	if err != nil {
            return err
    }
	color, err := provider.GetGlobalBool(flagGlobalColor)
	if err != nil {
            return err
    }
	ssl, err := provider.GetGlobalBool(flagGlobalSsl)
	if err != nil {
            return err
    }
	ca, err := provider.GetGlobalString(flagGlobalCa)
	if err != nil {
            return err
    }
	cert, err := provider.GetGlobalString(flagGlobalCert)
	if err != nil {
            return err
    }
	key, err := provider.GetGlobalString(flagGlobalKey)
	if err != nil {
            return err
    }
	host, err := provider.GetGlobalString(flagGlobalHost)
	if err != nil {
            return err
    }
	port, err := provider.GetGlobalString(flagGlobalPort)
	if err != nil {
            return err
    }

// fetch local flag values this way
{{ range $key, $value := .boolStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalBool({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetBool({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}
{{- range $key, $value := .strStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalString({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetString({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}
{{- range $key, $value := .intStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalInt({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetInt({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}
{{- range $key, $value := .uintStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalUint({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetUint({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}
{{- range $key, $value := .strSliceStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalStringSlice({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetStringSlice({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}
{{- range $key, $value := .intSliceStubs -}}
    {{- if eq $value.Persistent true -}}
        {{$value.Name}}, err := provider.GetGlobalIntSlice({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- else -}}
        {{$value.Name}}, err := provider.GetIntSlice({{$value.VarName}})
        if err != nil {
            return err
        };
    {{- end }}
{{- end }}

// please remove these lines as and when you use these flag values.
// These are assigned to "_" by default so that the compiler does not complain.

// global flags
    _ = json
	_ = raw
	_ = color
	_ = ssl
	_ = ca
	_ = cert
	_ = key
	_ = host
	_ = port

// local flags
{{ range $key, $value := .boolStubs -}}
        _ = {{$value.Name}};
{{- end }}
{{- range $key, $value := .strStubs -}}
        _ = {{$value.Name}};
{{- end }}
{{- range $key, $value := .intStubs -}}
        _ = {{$value.Name}};
{{- end }}
{{- range $key, $value := .uintStubs -}}
        _ = {{$value.Name}};
{{- end }}
{{- range $key, $value := .strSliceStubs -}}
        _ = {{$value.Name}};
{{- end }}
{{- range $key, $value := .intSliceStubs -}}
        _ = {{$value.Name}};
{{- end }}
// ----- end autogenerated stub -----

// implement business logic below and do not forget to move this function to exec.go
