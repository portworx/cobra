package cli

// This is an auto-generated file. Pl. DO NOT EDIT

// a type is defined for each CLI function in order to pass
// flag values as a type safe transport mechanism.

// Error implements Error interface.
// Auto-generated. Pl. DO NOT EDIT
type Error string

// Error implements Error interface.
// Auto-generated. Pl. DO NOT EDIT
func (e Error) Error() string {
	return string(e)
}

// consts required for returning errors.
// Auto-generated. Pl. DO NOT EDIT
const (
	FlagsNotValidated Error = "flags are not validated"
)

// GlobalFlagger provides a pointer to global flag object
// Auto-generated. Pl. DO NOT EDIT
type GlobalFlagger interface {
    GetGlobal() *FlagsGlobal
}

// SerializerDeserializer provides serialization methods.
// Auto-generated. Pl. DO NOT EDIT
type SerializerDeserializer interface {
	Serialize() ([]byte, error)
	Deserialize([]byte) error
}

// FlagsGlobal aggregates global flags.
// This is auto-generated. Pl. DO NOT EDIT
type FlagsGlobal struct {
    // global flags
    Json bool
	Raw bool
	Color bool
	Ssl bool
	Ca string
	Cert string
	Key string
	Host string
	Port string
}

// GetGlobal provides access to global flags struct.
// Auto-generated. Pl. DO NOT EDIT
func (t *FlagsGlobal) GetGlobal() *FlagsGlobal {
    return t
}

// Serialize provides serialization method on this struct.
// Auto-generated. Pl. DO NOT EDIT
func (t *FlagsGlobal) Serialize() ([]byte, error) {
    return json.Marshal(t)
}

// Deserialize provides deserialization method for this struct.
// Auto-generated. Pl. DO NOT EDIT
func (t *FlagsGlobal) Deserialize(b []byte) error {
    return json.Unmarshal(b, t)
}

{{.structs}}

// flagsCopyCommonAttributes copies common data fields between two flag types.
// Auto-generated. Pl. DO NOT EDIT
func flagsCopyCommonAttributes(src, dst SerializerDeserializer) error {
    if b, err := src.Serialize(); err != nil {
        return err
    } else {
        if err := dst.Deserialize(b); err != nil {
            return err
        }
    }
    return nil
}
